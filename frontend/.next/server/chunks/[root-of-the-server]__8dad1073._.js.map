{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/app/api/game/sessions/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport axios from \"axios\";\nimport { ApiRouteError } from \"@/types/api.types\";\n\n// Lấy danh sách phiên game\nexport async function GET(request: NextRequest) {\n  try {\n    const response = await axios.get(\"http://localhost:3000/game/sessions\", {\n      headers: {\n        Cookie: request.headers.get(\"cookie\") || \"\",\n      },\n      withCredentials: true,\n    });\n\n    return NextResponse.json(response.data);\n  } catch (error: unknown) {\n    const apiError = error as ApiRouteError;\n    console.error(\n      \"Error fetching game sessions:\",\n      apiError.response?.data || apiError.message\n    );\n    return NextResponse.json(\n      {\n        message:\n          apiError.response?.data?.message || \"Failed to fetch game sessions\",\n      },\n      { status: apiError.response?.status || 500 }\n    );\n  }\n}\n\n// Tạo phiên game mới\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n\n    const response = await axios.post(\n      \"http://localhost:3000/game/sessions\",\n      body,\n      {\n        headers: {\n          Cookie: request.headers.get(\"cookie\") || \"\",\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n      }\n    );\n\n    return NextResponse.json(response.data);\n  } catch (error: unknown) {\n    const apiError = error as ApiRouteError;\n    console.error(\n      \"Error creating game session:\",\n      apiError.response?.data || apiError.message\n    );\n    return NextResponse.json(\n      {\n        message:\n          apiError.response?.data?.message || \"Failed to create game session\",\n      },\n      { status: apiError.response?.status || 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAIO,eAAe,IAAI,OAAoB;IAC5C,IAAI;QACF,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,GAAG,CAAC,uCAAuC;YACtE,SAAS;gBACP,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;YAC3C;YACA,iBAAiB;QACnB;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI;IACxC,EAAE,OAAO,OAAgB;QACvB,MAAM,WAAW;QACjB,QAAQ,KAAK,CACX,iCACA,SAAS,QAAQ,EAAE,QAAQ,SAAS,OAAO;QAE7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SACE,SAAS,QAAQ,EAAE,MAAM,WAAW;QACxC,GACA;YAAE,QAAQ,SAAS,QAAQ,EAAE,UAAU;QAAI;IAE/C;AACF;AAGO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,uCACA,MACA;YACE,SAAS;gBACP,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;gBACzC,gBAAgB;YAClB;YACA,iBAAiB;QACnB;QAGF,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI;IACxC,EAAE,OAAO,OAAgB;QACvB,MAAM,WAAW;QACjB,QAAQ,KAAK,CACX,gCACA,SAAS,QAAQ,EAAE,QAAQ,SAAS,OAAO;QAE7C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YACE,SACE,SAAS,QAAQ,EAAE,MAAM,WAAW;QACxC,GACA;YAAE,QAAQ,SAAS,QAAQ,EAAE,UAAU;QAAI;IAE/C;AACF","debugId":null}}]
}