{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/app/api/auth/login/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\nimport axios from \"axios\";\n\nexport async function POST(request: NextRequest) {\n  try {\n    const body = await request.json();\n\n    const response = await axios.post(\n      \"http://localhost:3001/auth/login\",\n      body,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        withCredentials: true,\n      }\n    );\n\n    // Lấy cookie từ response\n    const cookies = response.headers[\"set-cookie\"];\n\n    // Tạo response với cookie\n    const nextResponse = NextResponse.json(response.data);\n\n    // Thêm cookie từ backend vào response\n    if (cookies) {\n      for (const cookie of cookies) {\n        const match = cookie.match(/^([^=]+)=([^;]+)/);\n        if (match) {\n          const name = match[1].trim();\n          const value = match[2].trim();\n\n          // Chỉ thêm cookie JWT\n          if (name === \"jwt\") {\n            nextResponse.cookies.set({\n              name,\n              value,\n              httpOnly: true,\n              secure: process.env.NODE_ENV === \"production\",\n              sameSite: \"lax\",\n              path: \"/\",\n            });\n          }\n        }\n      }\n    }\n\n    return nextResponse;\n  } catch (error: any) {\n    console.error(\"Error logging in:\", error.response?.data || error.message);\n    return NextResponse.json(\n      { message: error.response?.data?.message || \"Failed to login\" },\n      { status: error.response?.status || 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC7C,IAAI;QACF,MAAM,OAAO,MAAM,QAAQ,IAAI;QAE/B,MAAM,WAAW,MAAM,uIAAA,CAAA,UAAK,CAAC,IAAI,CAC/B,oCACA,MACA;YACE,SAAS;gBACP,gBAAgB;YAClB;YACA,iBAAiB;QACnB;QAGF,yBAAyB;QACzB,MAAM,UAAU,SAAS,OAAO,CAAC,aAAa;QAE9C,0BAA0B;QAC1B,MAAM,eAAe,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,SAAS,IAAI;QAEpD,sCAAsC;QACtC,IAAI,SAAS;YACX,KAAK,MAAM,UAAU,QAAS;gBAC5B,MAAM,QAAQ,OAAO,KAAK,CAAC;gBAC3B,IAAI,OAAO;oBACT,MAAM,OAAO,KAAK,CAAC,EAAE,CAAC,IAAI;oBAC1B,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,IAAI;oBAE3B,sBAAsB;oBACtB,IAAI,SAAS,OAAO;wBAClB,aAAa,OAAO,CAAC,GAAG,CAAC;4BACvB;4BACA;4BACA,UAAU;4BACV,QAAQ,oDAAyB;4BACjC,UAAU;4BACV,MAAM;wBACR;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT,EAAE,OAAO,OAAY;QACnB,QAAQ,KAAK,CAAC,qBAAqB,MAAM,QAAQ,EAAE,QAAQ,MAAM,OAAO;QACxE,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS,MAAM,QAAQ,EAAE,MAAM,WAAW;QAAkB,GAC9D;YAAE,QAAQ,MAAM,QAAQ,EAAE,UAAU;QAAI;IAE5C;AACF","debugId":null}}]
}