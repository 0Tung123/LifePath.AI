{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/utils/auth.ts"],"sourcesContent":["// Auth utility functions\r\n// Note: JWT tokens are stored as httpOnly cookies, so we can't access them directly\r\n// We'll rely on the server to validate the cookie and return auth status\r\n\r\nimport { User } from \"@/types/auth.types\";\r\n\r\nexport const checkAuthStatus = async (): Promise<{\r\n  isAuthenticated: boolean;\r\n  user?: User;\r\n}> => {\r\n  try {\r\n    const apiUrl = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000\";\r\n    const response = await fetch(`${apiUrl}/auth/status`, {\r\n      method: \"GET\",\r\n      credentials: \"include\", // Include cookies in the request\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n\r\n    if (response.ok) {\r\n      return await response.json();\r\n    }\r\n\r\n    return { isAuthenticated: false };\r\n  } catch (error) {\r\n    console.error(\"Error checking auth status:\", error);\r\n    return { isAuthenticated: false };\r\n  }\r\n};\r\n\r\nexport const logout = async (): Promise<void> => {\r\n  try {\r\n    const apiUrl = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:3000\";\r\n    await fetch(`${apiUrl}/auth/logout`, {\r\n      method: \"POST\",\r\n      credentials: \"include\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Error during logout:\", error);\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,yBAAyB;AACzB,oFAAoF;AACpF,yEAAyE;;;;;AAStD;AALZ,MAAM,kBAAkB;IAI7B,IAAI;QACF,MAAM,SAAS,6DAAmC;QAClD,MAAM,WAAW,MAAM,MAAM,GAAG,OAAO,YAAY,CAAC,EAAE;YACpD,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,SAAS,EAAE,EAAE;YACf,OAAO,MAAM,SAAS,IAAI;QAC5B;QAEA,OAAO;YAAE,iBAAiB;QAAM;IAClC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,+BAA+B;QAC7C,OAAO;YAAE,iBAAiB;QAAM;IAClC;AACF;AAEO,MAAM,SAAS;IACpB,IAAI;QACF,MAAM,SAAS,6DAAmC;QAClD,MAAM,MAAM,GAAG,OAAO,YAAY,CAAC,EAAE;YACnC,QAAQ;YACR,aAAa;YACb,SAAS;gBACP,gBAAgB;YAClB;QACF;IACF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;IACxC;AACF","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/contexts/AuthContext.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, {\r\n  createContext,\r\n  useContext,\r\n  useState,\r\n  useEffect,\r\n  ReactNode,\r\n} from \"react\";\r\nimport { checkAuthStatus } from \"@/utils/auth\";\r\nimport { User } from \"@/types/auth.types\";\r\n\r\ninterface AuthContextType {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  loading: boolean;\r\n  checkAuth: () => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const checkAuth = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const authStatus = await checkAuthStatus();\r\n      setIsAuthenticated(authStatus.isAuthenticated);\r\n      setUser(authStatus.user || null);\r\n    } catch (error) {\r\n      console.error(\"Error checking authentication:\", error);\r\n      setIsAuthenticated(false);\r\n      setUser(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const value: AuthContextType = {\r\n    isAuthenticated,\r\n    user,\r\n    loading,\r\n    checkAuth,\r\n  };\r\n\r\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\r\n};\r\n"],"names":[],"mappings":";;;;;AAEA;AAOA;;;AATA;;;AAmBA,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA+B;AAExD,MAAM,UAAU;;IACrB,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;;IACpE,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,YAAY;QAChB,IAAI;YACF,WAAW;YACX,MAAM,aAAa,MAAM,CAAA,GAAA,uHAAA,CAAA,kBAAe,AAAD;YACvC,mBAAmB,WAAW,eAAe;YAC7C,QAAQ,WAAW,IAAI,IAAI;QAC7B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,kCAAkC;YAChD,mBAAmB;YACnB,QAAQ;QACV,SAAU;YACR,WAAW;QACb;IACF;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;kCAAE;YACR;QACF;iCAAG,EAAE;IAEL,MAAM,QAAyB;QAC7B;QACA;QACA;QACA;IACF;IAEA,qBAAO,6LAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;IAhCa;KAAA","debugId":null}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/lib/firebase.ts"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { getAuth, connectAuthEmulator } from 'firebase/auth';\nimport { getFirestore, connectFirestoreEmulator } from 'firebase/firestore';\nimport { getStorage, connectStorageEmulator } from 'firebase/storage';\nimport { getAnalytics } from 'firebase/analytics';\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Firebase services\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const storage = getStorage(app);\n\n// Initialize Analytics (only in browser)\nexport const analytics = typeof window !== 'undefined' ? getAnalytics(app) : null;\n\n// Connect to emulators in development (optional)\nif (process.env.NODE_ENV === 'development' && typeof window !== 'undefined') {\n  // Uncomment these lines if you want to use Firebase emulators\n  // connectAuthEmulator(auth, 'http://localhost:9099');\n  // connectFirestoreEmulator(db, 'localhost', 8080);\n  // connectStorageEmulator(storage, 'localhost', 9199);\n}\n\nexport default app;"],"names":[],"mappings":";;;;;;;AAOU;AAPV;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAEA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAGnB,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AACrB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AACxB,MAAM,UAAU,CAAA,GAAA,oKAAA,CAAA,aAAU,AAAD,EAAE;AAG3B,MAAM,YAAY,uCAAgC,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;AAEtE,iDAAiD;AACjD,IAAI,oDAAyB,iBAAiB,aAAkB,aAAa;AAC3E,8DAA8D;AAC9D,sDAAsD;AACtD,mDAAmD;AACnD,sDAAsD;AACxD;uCAEe","debugId":null}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/lib/firebase-auth.ts"],"sourcesContent":["import {\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  User,\r\n  updateProfile,\r\n  sendPasswordResetEmail,\r\n  GoogleAuthProvider,\r\n  signInWithPopup,\r\n  FacebookAuthProvider,\r\n  TwitterAuthProvider,\r\n} from 'firebase/auth';\r\nimport { auth } from './firebase';\r\n\r\n// Auth providers\r\nexport const googleProvider = new GoogleAuthProvider();\r\nexport const facebookProvider = new FacebookAuthProvider();\r\nexport const twitterProvider = new TwitterAuthProvider();\r\n\r\n// Sign up with email and password\r\nexport const signUpWithEmail = async (email: string, password: string, displayName?: string) => {\r\n  try {\r\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\r\n    \r\n    // Update profile with display name if provided\r\n    if (displayName && userCredential.user) {\r\n      await updateProfile(userCredential.user, { displayName });\r\n    }\r\n    \r\n    return userCredential.user;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Sign in with email and password\r\nexport const signInWithEmail = async (email: string, password: string) => {\r\n  try {\r\n    const userCredential = await signInWithEmailAndPassword(auth, email, password);\r\n    return userCredential.user;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Sign in with Google\r\nexport const signInWithGoogle = async () => {\r\n  try {\r\n    const result = await signInWithPopup(auth, googleProvider);\r\n    return result.user;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Sign in with Facebook\r\nexport const signInWithFacebook = async () => {\r\n  try {\r\n    const result = await signInWithPopup(auth, facebookProvider);\r\n    return result.user;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Sign in with Twitter\r\nexport const signInWithTwitter = async () => {\r\n  try {\r\n    const result = await signInWithPopup(auth, twitterProvider);\r\n    return result.user;\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Sign out\r\nexport const signOutUser = async () => {\r\n  try {\r\n    await signOut(auth);\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Reset password\r\nexport const resetPassword = async (email: string) => {\r\n  try {\r\n    await sendPasswordResetEmail(auth, email);\r\n  } catch (error: any) {\r\n    throw new Error(error.message);\r\n  }\r\n};\r\n\r\n// Auth state observer\r\nexport const onAuthStateChange = (callback: (user: User | null) => void) => {\r\n  return onAuthStateChanged(auth, callback);\r\n};\r\n\r\n// Get current user\r\nexport const getCurrentUser = () => {\r\n  return auth.currentUser;\r\n};"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;;;AAGO,MAAM,iBAAiB,IAAI,wNAAA,CAAA,qBAAkB;AAC7C,MAAM,mBAAmB,IAAI,0NAAA,CAAA,uBAAoB;AACjD,MAAM,kBAAkB,IAAI,0NAAA,CAAA,sBAAmB;AAG/C,MAAM,kBAAkB,OAAO,OAAe,UAAkB;IACrE,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,qOAAA,CAAA,iCAA8B,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE,OAAO;QAEzE,+CAA+C;QAC/C,IAAI,eAAe,eAAe,IAAI,EAAE;YACtC,MAAM,CAAA,GAAA,oNAAA,CAAA,gBAAa,AAAD,EAAE,eAAe,IAAI,EAAE;gBAAE;YAAY;QACzD;QAEA,OAAO,eAAe,IAAI;IAC5B,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,kBAAkB,OAAO,OAAe;IACnD,IAAI;QACF,MAAM,iBAAiB,MAAM,CAAA,GAAA,iOAAA,CAAA,6BAA0B,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE,OAAO;QACrE,OAAO,eAAe,IAAI;IAC5B,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,mBAAmB;IAC9B,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;QAC3C,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,qBAAqB;IAChC,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;QAC3C,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,oBAAoB;IAC/B,IAAI;QACF,MAAM,SAAS,MAAM,CAAA,GAAA,qNAAA,CAAA,kBAAe,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;QAC3C,OAAO,OAAO,IAAI;IACpB,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,cAAc;IACzB,IAAI;QACF,MAAM,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE,yHAAA,CAAA,OAAI;IACpB,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,gBAAgB,OAAO;IAClC,IAAI;QACF,MAAM,CAAA,GAAA,6NAAA,CAAA,yBAAsB,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;IACrC,EAAE,OAAO,OAAY;QACnB,MAAM,IAAI,MAAM,MAAM,OAAO;IAC/B;AACF;AAGO,MAAM,oBAAoB,CAAC;IAChC,OAAO,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,yHAAA,CAAA,OAAI,EAAE;AAClC;AAGO,MAAM,iBAAiB;IAC5B,OAAO,yHAAA,CAAA,OAAI,CAAC,WAAW;AACzB","debugId":null}},
    {"offset": {"line": 296, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/lib/firebase-firestore.ts"],"sourcesContent":["import {\r\n  collection,\r\n  doc,\r\n  addDoc,\r\n  getDoc,\r\n  getDocs,\r\n  updateDoc,\r\n  deleteDoc,\r\n  query,\r\n  where,\r\n  orderBy,\r\n  limit,\r\n  onSnapshot,\r\n  Timestamp,\r\n  DocumentData,\r\n  QueryConstraint,\r\n} from 'firebase/firestore';\r\nimport { db } from './firebase';\r\n\r\n// Generic CRUD operations\r\nexport class FirestoreService {\r\n  // Create document\r\n  static async create(collectionName: string, data: any) {\r\n    try {\r\n      const docRef = await addDoc(collection(db, collectionName), {\r\n        ...data,\r\n        createdAt: Timestamp.now(),\r\n        updatedAt: Timestamp.now(),\r\n      });\r\n      return docRef.id;\r\n    } catch (error: any) {\r\n      throw new Error(`Error creating document: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  // Get document by ID\r\n  static async getById(collectionName: string, id: string) {\r\n    try {\r\n      const docRef = doc(db, collectionName, id);\r\n      const docSnap = await getDoc(docRef);\r\n      \r\n      if (docSnap.exists()) {\r\n        return { id: docSnap.id, ...docSnap.data() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error: any) {\r\n      throw new Error(`Error getting document: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  // Get all documents\r\n  static async getAll(collectionName: string, constraints: QueryConstraint[] = []) {\r\n    try {\r\n      const q = query(collection(db, collectionName), ...constraints);\r\n      const querySnapshot = await getDocs(q);\r\n      \r\n      return querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n    } catch (error: any) {\r\n      throw new Error(`Error getting documents: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  // Update document\r\n  static async update(collectionName: string, id: string, data: any) {\r\n    try {\r\n      const docRef = doc(db, collectionName, id);\r\n      await updateDoc(docRef, {\r\n        ...data,\r\n        updatedAt: Timestamp.now(),\r\n      });\r\n    } catch (error: any) {\r\n      throw new Error(`Error updating document: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  // Delete document\r\n  static async delete(collectionName: string, id: string) {\r\n    try {\r\n      const docRef = doc(db, collectionName, id);\r\n      await deleteDoc(docRef);\r\n    } catch (error: any) {\r\n      throw new Error(`Error deleting document: ${error.message}`);\r\n    }\r\n  }\r\n\r\n  // Real-time listener\r\n  static onSnapshot(\r\n    collectionName: string,\r\n    callback: (data: DocumentData[]) => void,\r\n    constraints: QueryConstraint[] = []\r\n  ) {\r\n    const q = query(collection(db, collectionName), ...constraints);\r\n    \r\n    return onSnapshot(q, (querySnapshot) => {\r\n      const data = querySnapshot.docs.map(doc => ({\r\n        id: doc.id,\r\n        ...doc.data()\r\n      }));\r\n      callback(data);\r\n    });\r\n  }\r\n}\r\n\r\n// Game-specific Firestore operations\r\nexport class GameFirestoreService {\r\n  // User profiles\r\n  static async createUserProfile(userId: string, userData: any) {\r\n    try {\r\n      const docRef = doc(db, 'users', userId);\r\n      await updateDoc(docRef, {\r\n        ...userData,\r\n        createdAt: Timestamp.now(),\r\n        updatedAt: Timestamp.now(),\r\n      });\r\n    } catch (error: any) {\r\n      // If document doesn't exist, create it\r\n      const docRef = doc(db, 'users', userId);\r\n      await updateDoc(docRef, {\r\n        ...userData,\r\n        createdAt: Timestamp.now(),\r\n        updatedAt: Timestamp.now(),\r\n      });\r\n    }\r\n  }\r\n\r\n  static async getUserProfile(userId: string) {\r\n    return FirestoreService.getById('users', userId);\r\n  }\r\n\r\n  // Game sessions backup\r\n  static async backupGameSession(sessionData: any) {\r\n    return FirestoreService.create('game_sessions_backup', sessionData);\r\n  }\r\n\r\n  static async getUserGameSessions(userId: string) {\r\n    return FirestoreService.getAll('game_sessions_backup', [\r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    ]);\r\n  }\r\n\r\n  // Characters backup\r\n  static async backupCharacter(characterData: any) {\r\n    return FirestoreService.create('characters_backup', characterData);\r\n  }\r\n\r\n  static async getUserCharacters(userId: string) {\r\n    return FirestoreService.getAll('characters_backup', [\r\n      where('userId', '==', userId),\r\n      orderBy('createdAt', 'desc')\r\n    ]);\r\n  }\r\n\r\n  // Game statistics\r\n  static async updateGameStats(userId: string, stats: any) {\r\n    const docRef = doc(db, 'game_stats', userId);\r\n    return updateDoc(docRef, {\r\n      ...stats,\r\n      updatedAt: Timestamp.now(),\r\n    });\r\n  }\r\n\r\n  static async getGameStats(userId: string) {\r\n    return FirestoreService.getById('game_stats', userId);\r\n  }\r\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":["file:///D:/my-fullstack-app/frontend/src/contexts/FirebaseAuthContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useEffect, useState } from 'react';\r\nimport { User } from 'firebase/auth';\r\nimport { onAuthStateChange } from '@/lib/firebase-auth';\r\nimport { GameFirestoreService } from '@/lib/firebase-firestore';\r\n\r\ninterface FirebaseAuthContextType {\r\n  firebaseUser: User | null;\r\n  loading: boolean;\r\n  userProfile: any;\r\n  updateUserProfile: (data: any) => Promise<void>;\r\n  syncWithBackend: () => Promise<void>;\r\n}\r\n\r\nconst FirebaseAuthContext = createContext<FirebaseAuthContextType>({\r\n  firebaseUser: null,\r\n  loading: true,\r\n  userProfile: null,\r\n  updateUserProfile: async () => {},\r\n  syncWithBackend: async () => {},\r\n});\r\n\r\nexport const useFirebaseAuth = () => {\r\n  const context = useContext(FirebaseAuthContext);\r\n  if (!context) {\r\n    throw new Error('useFirebaseAuth must be used within a FirebaseAuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface FirebaseAuthProviderProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const FirebaseAuthProvider: React.FC<FirebaseAuthProviderProps> = ({ children }) => {\r\n  const [firebaseUser, setFirebaseUser] = useState<User | null>(null);\r\n  const [userProfile, setUserProfile] = useState<any>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = onAuthStateChange(async (user) => {\r\n      setFirebaseUser(user);\r\n      \r\n      if (user) {\r\n        // Load user profile from Firestore\r\n        try {\r\n          const profile = await GameFirestoreService.getUserProfile(user.uid);\r\n          setUserProfile(profile);\r\n          \r\n          // Create profile if it doesn't exist\r\n          if (!profile) {\r\n            const newProfile = {\r\n              uid: user.uid,\r\n              email: user.email,\r\n              displayName: user.displayName,\r\n              photoURL: user.photoURL,\r\n              gameStats: {\r\n                totalGamesPlayed: 0,\r\n                totalChoicesMade: 0,\r\n                favoriteGenre: null,\r\n                totalPlayTime: 0,\r\n                lastPlayedAt: null,\r\n              },\r\n              preferences: {\r\n                theme: 'dark',\r\n                language: 'vi',\r\n                notifications: true,\r\n                autoSave: true,\r\n              },\r\n              createdAt: new Date().toISOString(),\r\n            };\r\n            \r\n            await GameFirestoreService.createUserProfile(user.uid, newProfile);\r\n            setUserProfile(newProfile);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error loading user profile:', error);\r\n        }\r\n      } else {\r\n        setUserProfile(null);\r\n      }\r\n      \r\n      setLoading(false);\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  const updateUserProfile = async (data: any) => {\r\n    if (!firebaseUser) return;\r\n    \r\n    try {\r\n      const updatedProfile = {\r\n        ...userProfile,\r\n        ...data,\r\n        updatedAt: new Date().toISOString(),\r\n      };\r\n      \r\n      await GameFirestoreService.createUserProfile(firebaseUser.uid, updatedProfile);\r\n      setUserProfile(updatedProfile);\r\n    } catch (error) {\r\n      console.error('Error updating user profile:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const syncWithBackend = async () => {\r\n    if (!firebaseUser || !userProfile) return;\r\n    \r\n    try {\r\n      // Sync Firebase user data with backend\r\n      // This can be used to keep both systems in sync\r\n      console.log('Syncing Firebase user with backend...', {\r\n        firebaseUid: firebaseUser.uid,\r\n        email: firebaseUser.email,\r\n        profile: userProfile,\r\n      });\r\n      \r\n      // You can add API call to backend here if needed\r\n      // await axios.post('/api/auth/sync-firebase', {\r\n      //   firebaseUid: firebaseUser.uid,\r\n      //   userData: userProfile,\r\n      // });\r\n    } catch (error) {\r\n      console.error('Error syncing with backend:', error);\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    firebaseUser,\r\n    loading,\r\n    userProfile,\r\n    updateUserProfile,\r\n    syncWithBackend,\r\n  };\r\n\r\n  return (\r\n    <FirebaseAuthContext.Provider value={value}>\r\n      {children}\r\n    </FirebaseAuthContext.Provider>\r\n  );\r\n};"],"names":[],"mappings":";;;;;AAEA;AAEA;AACA;;;AALA;;;;AAeA,MAAM,oCAAsB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAD,EAA2B;IACjE,cAAc;IACd,SAAS;IACT,aAAa;IACb,mBAAmB,WAAa;IAChC,iBAAiB,WAAa;AAChC;AAEO,MAAM,kBAAkB;;IAC7B,MAAM,UAAU,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,CAAC,SAAS;QACZ,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;GANa;AAYN,MAAM,uBAA4D,CAAC,EAAE,QAAQ,EAAE;;IACpF,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe;IAC9D,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IACpD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0CAAE;YACR,MAAM,cAAc,CAAA,GAAA,iIAAA,CAAA,oBAAiB,AAAD;8DAAE,OAAO;oBAC3C,gBAAgB;oBAEhB,IAAI,MAAM;wBACR,mCAAmC;wBACnC,IAAI;4BACF,MAAM,UAAU,MAAM,sIAAA,CAAA,uBAAoB,CAAC,cAAc,CAAC,KAAK,GAAG;4BAClE,eAAe;4BAEf,qCAAqC;4BACrC,IAAI,CAAC,SAAS;gCACZ,MAAM,aAAa;oCACjB,KAAK,KAAK,GAAG;oCACb,OAAO,KAAK,KAAK;oCACjB,aAAa,KAAK,WAAW;oCAC7B,UAAU,KAAK,QAAQ;oCACvB,WAAW;wCACT,kBAAkB;wCAClB,kBAAkB;wCAClB,eAAe;wCACf,eAAe;wCACf,cAAc;oCAChB;oCACA,aAAa;wCACX,OAAO;wCACP,UAAU;wCACV,eAAe;wCACf,UAAU;oCACZ;oCACA,WAAW,IAAI,OAAO,WAAW;gCACnC;gCAEA,MAAM,sIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,KAAK,GAAG,EAAE;gCACvD,eAAe;4BACjB;wBACF,EAAE,OAAO,OAAO;4BACd,QAAQ,KAAK,CAAC,+BAA+B;wBAC/C;oBACF,OAAO;wBACL,eAAe;oBACjB;oBAEA,WAAW;gBACb;;YAEA;kDAAO,IAAM;;QACf;yCAAG,EAAE;IAEL,MAAM,oBAAoB,OAAO;QAC/B,IAAI,CAAC,cAAc;QAEnB,IAAI;YACF,MAAM,iBAAiB;gBACrB,GAAG,WAAW;gBACd,GAAG,IAAI;gBACP,WAAW,IAAI,OAAO,WAAW;YACnC;YAEA,MAAM,sIAAA,CAAA,uBAAoB,CAAC,iBAAiB,CAAC,aAAa,GAAG,EAAE;YAC/D,eAAe;QACjB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gCAAgC;YAC9C,MAAM;QACR;IACF;IAEA,MAAM,kBAAkB;QACtB,IAAI,CAAC,gBAAgB,CAAC,aAAa;QAEnC,IAAI;YACF,uCAAuC;YACvC,gDAAgD;YAChD,QAAQ,GAAG,CAAC,yCAAyC;gBACnD,aAAa,aAAa,GAAG;gBAC7B,OAAO,aAAa,KAAK;gBACzB,SAAS;YACX;QAEA,iDAAiD;QACjD,gDAAgD;QAChD,mCAAmC;QACnC,2BAA2B;QAC3B,MAAM;QACR,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,MAAM,QAAQ;QACZ;QACA;QACA;QACA;QACA;IACF;IAEA,qBACE,6LAAC,oBAAoB,QAAQ;QAAC,OAAO;kBAClC;;;;;;AAGP;IA3Ga;KAAA","debugId":null}}]
}